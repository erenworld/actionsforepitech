name: EpiActions

run-name: ${{ github.actor }} is testing out EpiActions

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  MIRROR_URL: ${{ secrets.MIRROR_URL }}
  EXECUTABLES: "exec"

jobs:
  check_coding_style:
    name: check_coding_style
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
        - name: check_coding_style
          uses: actions/checkout@v4

        - name: Annotations
          id: check_coding_style
          run: |
              check.sh "$(pwd)" "$(pwd)"
              if [ -s "$(pwd)/coding-style-reports.log" ]; then
                awk -F: '{
                  print $3, $2, "coding style error:", $1;
                  print "::error file=Makefile,line=" $2 ",endLine=" $2 ",title=\"Coding Style Error\"::" $1
                }' "$(pwd)/coding-style-reports.log"
                exit 84
              fi
                echo "Everything is clean."
                exit 0

  check_program_compilation:
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    container:
      image: epitechcontent/epitest-docker
    steps:
        - name: check_out_repo_code
          uses: actions/checkout@v4
        - name: Make compilation
          run: make
          timeout-minutes: 2
        - name: Make clean compilation
          run: make clean
  
  run_tests:
    runs-on: ubuntu-latest
    needs: [check_program_compilation]
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: check_out_repo_codee
        uses: actions/checkout@v4
      - name: MakeTest compilation
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: [run_tests]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: checkout_repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ secrets.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}

